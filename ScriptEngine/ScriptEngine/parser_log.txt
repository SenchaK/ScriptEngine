func Vector2.init
stack frame 4
00000000:       mov R0 , L[1]
00000014:       mov R0 , L[2]
00000028:       mov R0 , L[3]
00000042:       mov R0 , L[1]
00000056:       mov L&[0][0] , R0
00000076:       mov R0 , L&[0][0]
00000096:       mov R0 , L[2]
00000110:       mov L&[0][1] , R0
00000130:       mov R0 , L&[0][1]
00000150:       mov R0 , L[3]
00000164:       mov L&[0][2] , R0
00000184:       mov R0 , L&[0][2]
00000204:       end

func main
stack frame 31
00000000:       mov R0 , 0
00000012:       mov L[30] , R0
00000026:       mov R0 , L[30]
00000040:       mov R0 , L[30]
00000054:       mov R1 , 10
00000066:         l R0 , R1
00000071:        jz [00000276]
00000076:       mov R0 , L[30]
00000090:   mov ptr R1 , L[0+(3*R0)]
00000112:  push ptr R1
00000115:       mov R1 , 50
00000127:       mov R2 , L[30]
00000141:       mul R1 , R2
00000146:      push R1
00000149:       mov R1 , 25
00000161:       mov R2 , L[30]
00000175:       mul R1 , R2
00000180:      push R1
00000183:       mov R1 , 70
00000195:       mov R2 , L[30]
00000209:       mul R1 , R2
00000214:      push R1
00000217:        st 1
00000219:      call 0
00000224:       mov R1 , R0
00000229:        ld 1
00000231:       mov R0 , 1
00000243:       add L[30] , R0
00000257:       mov R0 , L[30]
00000271:       jmp [00000040]
00000276:       mov R0 , 0
00000288:       mov L[30] , R0
00000302:       mov R0 , L[30]
00000316:       mov R0 , L[30]
00000330:       mov R1 , 10
00000342:         l R0 , R1
00000347:        jz [00000623]
00000352:       mov R0 , L[30]
00000366:       mov R0 , L[0+(3*R0)][0]
00000394:      push R0
00000397:        st 0
00000399:      call 1(built in function)
00000404:       mov R0 , R0
00000409:        ld 0
00000411:       mov R1 , ,
00000417:       add R0 , R1
00000422:       mov R1 , L[30]
00000436:       mov R1 , L[0+(3*R1)][1]
00000464:      push R1
00000467:        st 1
00000469:      call 1(built in function)
00000474:       mov R1 , R0
00000479:        ld 1
00000481:       add R0 , R1
00000486:       mov R1 , ,
00000492:       add R0 , R1
00000497:       mov R1 , L[30]
00000511:       mov R1 , L[0+(3*R1)][2]
00000539:      push R1
00000542:        st 1
00000544:      call 1(built in function)
00000549:       mov R1 , R0
00000554:        ld 1
00000556:       add R0 , R1
00000561:      push R0
00000564:        st 0
00000566:      call 0(built in function)
00000571:       mov R0 , R0
00000576:        ld 0
00000578:       mov R0 , 1
00000590:       add L[30] , R0
00000604:       mov R0 , L[30]
00000618:       jmp [00000316]
00000623:       end

